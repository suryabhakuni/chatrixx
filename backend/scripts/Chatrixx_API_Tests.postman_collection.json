{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6",
		"name": "Chatrixx API Tests",
		"description": "Test collection for Chatrixx API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Google Sign Up",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{firebaseToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/google/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"google",
								"signup"
							]
						},
						"description": "Sign up with Google"
					},
					"response": []
				},
				{
					"name": "Google Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData.user && jsonData.user.id) {",
									"    pm.collectionVariables.set(\"userId\", jsonData.user.id);",
									"    console.log(\"User ID saved: \" + jsonData.user.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{firebaseToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/google/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"google",
								"login"
							]
						},
						"description": "Login with Google"
					},
					"response": []
				},
				{
					"name": "Facebook Sign Up",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{firebaseToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/facebook/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"facebook",
								"signup"
							]
						},
						"description": "Sign up with Facebook"
					},
					"response": []
				},
				{
					"name": "Facebook Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{firebaseToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/facebook/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"facebook",
								"login"
							]
						},
						"description": "Login with Facebook"
					},
					"response": []
				},
				{
					"name": "Verify Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{firebaseToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/verify-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"verify-token"
							]
						},
						"description": "Verify Firebase token"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebaseToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "Logout user"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebaseToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile"
							]
						},
						"description": "Get current user profile"
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebaseToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Test User\",\n    \"status\": \"Testing the API\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile"
							]
						},
						"description": "Update user profile"
					},
					"response": []
				},
				{
					"name": "Search Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebaseToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/search?search=test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"search"
							],
							"query": [
								{
									"key": "search",
									"value": "test"
								}
							]
						},
						"description": "Search for users"
					},
					"response": []
				}
			],
			"description": "User management endpoints"
		},
		{
			"name": "Conversations",
			"item": [
				{
					"name": "Create Direct Conversation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData && jsonData._id) {",
									"    pm.collectionVariables.set(\"conversationId\", jsonData._id);",
									"    console.log(\"Conversation ID saved: \" + jsonData._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebaseToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{otherUserId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/conversations/direct",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"direct"
							]
						},
						"description": "Create or get direct conversation"
					},
					"response": []
				},
				{
					"name": "Create Group Conversation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData && jsonData._id) {",
									"    pm.collectionVariables.set(\"groupId\", jsonData._id);",
									"    console.log(\"Group ID saved: \" + jsonData._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebaseToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Group\",\n    \"participants\": [\"{{otherUserId}}\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/conversations/group",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"group"
							]
						},
						"description": "Create group conversation"
					},
					"response": []
				},
				{
					"name": "Get Conversations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebaseToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations"
							]
						},
						"description": "Get user's conversations"
					},
					"response": []
				},
				{
					"name": "Update Group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebaseToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Group Name\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/conversations/group/{{groupId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"group",
								"{{groupId}}"
							]
						},
						"description": "Update group conversation"
					},
					"response": []
				},
				{
					"name": "Archive Conversation",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebaseToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations/{{conversationId}}/archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"{{conversationId}}",
								"archive"
							]
						},
						"description": "Archive a conversation"
					},
					"response": []
				},
				{
					"name": "Get Archived Conversations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebaseToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations/archived",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"archived"
							]
						},
						"description": "Get archived conversations"
					},
					"response": []
				}
			],
			"description": "Conversation management endpoints"
		},
		{
			"name": "Messages",
			"item": [
				{
					"name": "Send Message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData && jsonData._id) {",
									"    pm.collectionVariables.set(\"messageId\", jsonData._id);",
									"    console.log(\"Message ID saved: \" + jsonData._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebaseToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"conversationId\": \"{{conversationId}}\",\n    \"content\": \"This is a test message\",\n    \"messageType\": \"text\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/messages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages"
							]
						},
						"description": "Send a message"
					},
					"response": []
				},
				{
					"name": "Get Messages",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebaseToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/messages/{{conversationId}}?page=1&limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages",
								"{{conversationId}}"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "20"
								}
							]
						},
						"description": "Get messages from a conversation"
					},
					"response": []
				},
				{
					"name": "Edit Message",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebaseToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"This is an edited message\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/messages/{{messageId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages",
								"{{messageId}}"
							]
						},
						"description": "Edit a message"
					},
					"response": []
				},
				{
					"name": "Add Reaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebaseToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"emoji\": \"👍\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/messages/{{messageId}}/reaction",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages",
								"{{messageId}}",
								"reaction"
							]
						},
						"description": "Add reaction to a message"
					},
					"response": []
				},
				{
					"name": "Delete Message",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebaseToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/messages/{{messageId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages",
								"{{messageId}}"
							]
						},
						"description": "Delete a message"
					},
					"response": []
				}
			],
			"description": "Message management endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:4000/api",
			"type": "string"
		},
		{
			"key": "firebaseToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "otherUserId",
			"value": "",
			"type": "string"
		},
		{
			"key": "conversationId",
			"value": "",
			"type": "string"
		},
		{
			"key": "groupId",
			"value": "",
			"type": "string"
		},
		{
			"key": "messageId",
			"value": "",
			"type": "string"
		}
	]
}
